// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQL_Lab_2.Data;

#nullable disable

namespace SQL_Lab_2.Migrations;

[DbContext(typeof(MusicDbContext))]
[Migration("20231127180645_Allow_Composer_Null")]
partial class Allow_Composer_Null
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.13")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("SQL_Lab_2.Data.Album", b =>
            {
                b.Property<int>("AlbumId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                b.Property<int>("ArtistId")
                    .HasColumnType("int");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(160)
                    .HasColumnType("nvarchar(160)");

                b.HasKey("AlbumId");

                b.HasIndex("ArtistId");

                b.ToTable("Albums");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Artist", b =>
            {
                b.Property<int>("ArtistId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnType("nvarchar(120)");

                b.HasKey("ArtistId");

                b.ToTable("Artists");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Genre", b =>
            {
                b.Property<int>("GenreId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnType("nvarchar(120)");

                b.HasKey("GenreId");

                b.ToTable("Genres");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.MediaType", b =>
            {
                b.Property<int>("MediaTypeId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaTypeId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnType("nvarchar(120)");

                b.HasKey("MediaTypeId");

                b.ToTable("MediaTypes");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Playlist", b =>
            {
                b.Property<int>("PlaylistId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnType("nvarchar(120)");

                b.HasKey("PlaylistId");

                b.ToTable("Playlists");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.PlaylistTrack", b =>
            {
                b.Property<int>("PlaylistId")
                    .HasColumnType("int");

                b.Property<int>("TrackId")
                    .HasColumnType("int");

                b.Property<int>("Id")
                    .HasColumnType("int");

                b.HasKey("PlaylistId", "TrackId");

                b.HasIndex("TrackId");

                b.ToTable("PlaylistTracks");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Track", b =>
            {
                b.Property<int>("TrackID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackID"));

                b.Property<int>("AlbumId")
                    .HasColumnType("int");

                b.Property<int>("Bytes")
                    .HasColumnType("int");

                b.Property<string>("Composer")
                    .HasMaxLength(220)
                    .HasColumnType("nvarchar(220)");

                b.Property<int>("GenreId")
                    .HasColumnType("int");

                b.Property<int>("MediaTypeId")
                    .HasColumnType("int");

                b.Property<int>("Milliseconds")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<double>("UnitPrice")
                    .HasColumnType("float");

                b.HasKey("TrackID");

                b.HasIndex("AlbumId");

                b.HasIndex("GenreId");

                b.HasIndex("MediaTypeId");

                b.ToTable("Tracks");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Album", b =>
            {
                b.HasOne("SQL_Lab_2.Data.Artist", "Artist")
                    .WithMany()
                    .HasForeignKey("ArtistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Artist");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.PlaylistTrack", b =>
            {
                b.HasOne("SQL_Lab_2.Data.Playlist", "Playlist")
                    .WithMany("PlaylistTracks")
                    .HasForeignKey("PlaylistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SQL_Lab_2.Data.Track", "Track")
                    .WithMany()
                    .HasForeignKey("TrackId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Playlist");

                b.Navigation("Track");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Track", b =>
            {
                b.HasOne("SQL_Lab_2.Data.Album", "Album")
                    .WithMany()
                    .HasForeignKey("AlbumId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SQL_Lab_2.Data.Genre", "Genre")
                    .WithMany()
                    .HasForeignKey("GenreId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SQL_Lab_2.Data.MediaType", "MediaType")
                    .WithMany()
                    .HasForeignKey("MediaTypeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Album");

                b.Navigation("Genre");

                b.Navigation("MediaType");
            });

        modelBuilder.Entity("SQL_Lab_2.Data.Playlist", b =>
            {
                b.Navigation("PlaylistTracks");
            });
#pragma warning restore 612, 618
    }
}
